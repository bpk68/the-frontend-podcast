---
import BaseLayout from '../layouts/base-layout.astro';
import AboutSnippet from '../components/AboutSnippet.astro';
import { kebabCase } from '../lib/utils';

interface Props {
  episode: {
    id: string;
    slug: string;
    body: string;
    collection: 'episodes';
    data: {
      title: string;
      episodeNumber: number;
      date: Date;
      description: string;
      tags: string[];
    };
  };
}
const { episode } = Astro.props;
const data = episode?.data;
---

<BaseLayout
  title={`${episode.data.title} | The Front End Podcast`}
  description={episode.data.description}
>
  <Fragment slot="meta">
    <meta property="og:title" content={data.title} />
    <meta property="og:description" content={data.description} />
    <meta
      property="og:url"
      content={`https://thefrontendpodcast.site/episodes/${episode.slug}`}
    />
    <meta
      property="og:image"
      content="https://thefrontendpodcast.site/img/frontendpodcast-logo.png"
    />
    <meta
      property="article:published_time"
      content="2019-04-01T08:41:19.000Z"
    />

    {data.tags.map((tag) => <meta property="article:tag" content={tag} />)}

    <meta name="twitter:title" content={data.title} />
    <meta name="twitter:description" content={data.description} />
    <meta
      name="twitter:url"
      content={`https://thefrontendpodcast.site/episodes/${episode.slug}`}
    />
    <meta name="twitter:label2" content="Filed under" />
    <meta name="twitter:data2" content={data.tags.join(',')} />
  </Fragment>

  <div class="container max-w-5xl">
    <section class="prose prose-lg max-w-none">
      <article class="mt-16">
        <h1 class="title is-size-2 has-text-weight-bold is-bold-light">
          Episode #{data.episodeNumber} - {data.title}
        </h1>
        <p>{data.description}</p>

        <slot />

        <footer
          class="flex flex-col gap-5 sm:flex-row items-center justify-between"
        >
          <div class="flex flex-row flex-wrap items-center gap-4">
            {
              data.tags && data.tags.length
                ? data.tags.map((tag) => (
                    <a
                      href={`/tags/${kebabCase(tag)}/`}
                      class="no-underline text-brand-green-900 hover:underline"
                    >
                      #{tag}
                    </a>
                  ))
                : null
            }
          </div>

          <div class="flex flex-row flex-wrap items-center gap-4">
            <p class="text-brand-white-900">Share:</p>
            <a
              target="_blank"
              href={`https://twitter.com/intent/tweet?text=${data.title}&amp;url=https://thefrontendpodcast.site${episode.slug}`}
              rel="noopener noreferrer"
            >
              Twitter
            </a>
            <a
              target="_blank"
              href={`https://www.facebook.com/sharer.php?u=https://thefrontendpodcast.site${episode.slug}`}
              rel="noopener noreferrer"
            >
              Facebook
            </a>
            <a
              target="_blank"
              href={`https://www.linkedin.com/shareArticle?mini=true&url=https://thefrontendpodcast.site${episode.slug}&amp;title=${data.title}&amp;source="The Front End Podcast"`}
              rel="noopener noreferrer"
            >
              LinkedIn
            </a>
          </div>
        </footer>
      </article>

      <hr />
      <AboutSnippet />
    </section>
  </div>
</BaseLayout>
