<section>
  <div class="notification is-primary">
    <h3>Get in touch with us</h3>
    <form
      class="is-full-width"
      name="contact-request"
      method="post"
      action="/contact/thanks/"
      data-netlify="true"
      data-netlify-honeypot="bot-field"
    >
      {
        /* The `form-name` hidden field is required to support form submissions without JavaScript */
      }
      <input type="hidden" name="form-name" value="newsletter" />
      <div hidden>
        <label>
          Donâ€™t fill this out:
          <input id="bot-field" name="bot-field" />
        </label>
      </div>

      <div class="field">
        <label class="label" for="txtName"> Your Name</label>
        <div class="control is-expanded">
          <input
            id="txtName"
            name="name"
            class="input"
            type="text"
            placeholder="Your name"
            required
          />
        </div>
      </div>
      <div class="field">
        <label class="label" for="txtEmail"> Your email address</label>
        <div class="control is-expanded">
          <input
            id="txtEmail"
            name="email"
            class="input"
            type="email"
            placeholder="Your email address"
            required
          />
        </div>
      </div>
      <div class="field">
        <label class="label" for="txtMessage"> Your message</label>
        <div class="control is-expanded">
          <textarea
            id="txtMessage"
            name="message"
            class="textarea"
            placeholder="What would you like to discuss?"
            required></textarea>
        </div>
      </div>
      <div class="field">
        <div class="control">
          <button type="submit" class="button is-primary is-rounded">
            send
          </button>
        </div>
      </div>
    </form>
  </div>
</section>

<script>
  const formName = 'contact-request';
  const action = '/contact/thanks/';

  const encode = (data: any) => {
    return Object.keys(data)
      .map(
        (key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key])
      )
      .join('&');
  };

  let fields = {};

  const handleChange = (e: any) => {
    fields = {
      ...fields,
      [e.target.name]: e.target.value,
    };
  };

  const handleSubmit = (e: any) => {
    e.preventDefault();

    fetch('/', {
      method: 'POST',
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      body: encode({
        'form-name': formName,
        ...fields,
      }),
    })
      .then(() => window.location.replace(action))
      .catch((error) => alert(error));
  };

  // adding event handlers
  document?.getElementById(formName)?.addEventListener('submit', handleSubmit);
  document
    ?.getElementById('bot-field')
    ?.addEventListener('change', handleChange);
  document?.getElementById('txtName')?.addEventListener('change', handleChange);
  document
    ?.getElementById('txtEmail')
    ?.addEventListener('change', handleChange);
  document
    ?.getElementById('txtMessage')
    ?.addEventListener('change', handleChange);
</script>
